(self.webpackChunk=self.webpackChunk||[]).push([[5095],{5095:e=>{e.exports='<p>The following Node.js options configure whether to polyfill or mock certain <a href="https://nodejs.org/docs/latest/api/globals.html">Node.js globals</a> and modules. This allows code originally written for the Node.js environment to run in other environments like the browser.</p> <p>This feature is provided by webpack\'s internal <a href="https://github.com/webpack/webpack/blob/master/lib/NodeStuffPlugin.js"><code>NodeStuffPlugin</code></a> plugin. If the target is "web" (default) or "webworker", the <a href="https://github.com/webpack/webpack/blob/master/lib/node/NodeSourcePlugin.js"><code>NodeSourcePlugin</code></a> plugin is also activated.</p> <h2 id="node"><code>node</code><a href="#node" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a></h2> <p><code>boolean = false</code> <code>object</code></p> <p>This is an object where each property is the name of a Node global or module and each value may be one of the following...</p> <ul> <li><code>true</code>: Provide a polyfill.</li> <li><code>\'mock\'</code>: Provide a mock that implements the expected interface but has little or no functionality.</li> <li><code>\'empty\'</code>: Provide an empty object.</li> <li><code>false</code>: Provide nothing. Code that expects this object may crash with a <code>ReferenceError</code>. Code that attempts to import the module using <code>require(\'modulename\')</code> may trigger a <code>Cannot find module "modulename"</code> error.</li> </ul> <blockquote class="warning"> <p>Not every Node global supports all four options. The compiler will throw an error for property-value combinations that aren\'t supported (e.g. <code>global: \'empty\'</code>). See the sections below for more details.</p> </blockquote> <blockquote class="tip"> <p>If you are using a module which needs global variables in it, use <code>ProvidePlugin</code> instead of <code>global</code>.</p> </blockquote> <p>These are the defaults:</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  node<span class="token operator">:</span> <span class="token punctuation">{</span>\n    global<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    __filename<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    __dirname<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>Since webpack 3.0.0, the <code>node</code> option may be set to <code>false</code> to completely turn off the <code>NodeStuffPlugin</code> and <code>NodeSourcePlugin</code> plugins.</p> <h2 id="nodeglobal"><code>node.global</code><a href="#nodeglobal" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a></h2> <p><code>boolean = true</code></p> <p>Defaults to <code>false</code> for <a href="/configuration/target/">targets</a> <code>node</code>, <code>async-node</code> and <code>electron-main</code>.</p> <p>See <a href="https://nodejs.org/api/globals.html">the source</a> for the exact behavior of this object.</p> <h2 id="node__filename"><code>node.__filename</code><a href="#node__filename" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a></h2> <p><code>boolean</code> <code>string = mock</code></p> <p>Defaults to <code>false</code> for <a href="/configuration/target/">targets</a> <code>node</code>, <code>async-node</code> and <code>electron-main</code>.</p> <p>Options:</p> <ul> <li><code>true</code>: The filename of the <strong>input</strong> file relative to the <a href="/configuration/entry-context/#context"><code>context</code> option</a>.</li> <li><code>false</code>: The regular Node.js <code>__filename</code> behavior. The filename of the <strong>output</strong> file when run in a Node.js environment.</li> <li><code>\'mock\'</code>: The fixed value <code>\'index.js\'</code>.</li> </ul> <h2 id="node__dirname"><code>node.__dirname</code><a href="#node__dirname" aria-hidden="true" tabindex="-1"><span class="icon icon-link"></span></a></h2> <p><code>boolean</code> <code>string = mock</code></p> <p>Defaults to <code>false</code> for <a href="/configuration/target/">targets</a> <code>node</code>, <code>async-node</code> and <code>electron-main</code>.</p> <p>Options:</p> <ul> <li><code>true</code>: The dirname of the <strong>input</strong> file relative to the <a href="/configuration/entry-context/#context"><code>context</code> option</a>.</li> <li><code>false</code>: The regular Node.js <code>__dirname</code> behavior. The dirname of the <strong>output</strong> file when run in a Node.js environment.</li> <li><code>\'mock\'</code>: The fixed value <code>\'/\'</code>.</li> </ul> '}}]);